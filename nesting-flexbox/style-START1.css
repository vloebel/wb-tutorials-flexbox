/* Some CSS Setup - nothing to do with flexbox */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  font-family: sans-serif;
  margin: 0;
  background-image: linear-gradient(260deg, #2376ae 0%, #c16ecf 100%);
}

.wrapper {
  max-width: 1000px;
  margin: 0 auto;
  padding:50px;
}

img {
  max-width:100%;
}

a {
  color:white;
  text-decoration: none;
  font-size: 15px;
  background:rgba(0,0,0,0.2);
  padding:20px 5px;
}
a:hover {
  background:rgba(0,0,0,0.4);
}

/* <!-- ul is flex container, li is flx item to start with --> */

/* flex container */
.slider-nav ul {
  list-style: none;
  margin: 0;
  padding: 0; 
  display:flex;
}

/* first flex item */
/* when in doubt, add a border to see what's what */
/* we want the li and links to stretch to fill the box, but the content inside that to center vertically, so we need a nested flexbox */

.slider-nav li{
  /* this part controls the flex item aspect */
  flex:2; 
  border:1px solid red;
  /* center horizontally */
  text-align:center;
  /* this part controls the flex container aspect */
  /* the immediate child of the li is a link, so that will stretch */
  display:flex;
}

.slider-nav .arrow{
  flex:1;
}

.arrow a{
  font-size:30px;
}
/* spread out the nav arrows 
not exactly sure why this moves arrows down?*/
.slider-nav a{
  /* display: block;
  width:100%; */
  flex-basis:100%;
  /* we want it to stretch AND center, so...
  we're going to have to put a span around the links
  so there is a place to do the vertical centering */
  display:flex;
  align-items:center; /* centers the child slpan while this child itself stretches */
  /* however, spans are inline so we need to give it a block and width */
  display:block;
  width:100%;
}



.slider-nav span{

}
